spring:
  application:
    name: HotelBooking
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SERVER_URL:jdbc:postgresql://localhost:5432/hotel_booking_db}
    username: ${SERVER_USERNAME:postgres}
    password: ${SERVER_PASS:1322}
  data:
    mongodb:
      username: ${MONGODB_SERVER_USERNAME:root}
      password: ${MONGODB_SERVER_PASS:root}
      host: ${MONGODB_HOST:localhost}
      database: ${MONGODB_SERVER_DATABASE:appdatabase}
      authentication-database: admin
      auto-index-creation: true
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    open-in-view: true
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:localhost:9092}

app:
  openapi:
    dev-url: http://localhost:8088
  kafka:
    kafkaMessageTopicRegistration: "user-register-topic"
    kafkaMessageTopicReservation: "user-reservation-topic"
    kafkaMessageGroupId: "kafka-message-group-id-2"
    listener:
      registration-event: ${KAFKA_LISTENERS_ENABLED:false}
      reservation-event: ${KAFKA_LISTENERS_ENABLED:false}
  service:
    user:
      defaultPageSize: 10
      defaultPageNumber: 0
    room:
      defaultPageSize: 10
      defaultPageNumber: 0
    hotel:
      defaultPageSize: 10
      defaultPageNumber: 0
    reservation:
      defaultPageSize: 10
      defaultPageNumber: 0
    reservationEvent:
      defaultPageSize: 10
      defaultPageNumber: 0
    registrationEvent:
      defaultPageSize: 10
      defaultPageNumber: 0
server:
  port: 8088